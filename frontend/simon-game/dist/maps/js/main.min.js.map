{"version":3,"sources":["js/controls.js","js/actions.js","js/game.js","js/main.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC7EA","file":"../../js/main.min.js","sourcesContent":["$('#start').click(function(){\n  game.active = true;\n  game.locked = true;\n  updateLevelDisplay();\n  game.genSequence();\n  $('.btn').prop('disabled', true);\n  game.dTimer = setTimeout(displaySequence(), 2000);\n});\n\n$('#switch').click(function() {\n  //turn off\n  if($(this).hasClass('on')){\n    $('#light').toggleClass(\"on\", false);\n    $('.btn').prop('disabled', true);\n    game.reset();\n  } else{\n    $('.btn').prop('disabled', false);\n  }\n  //turn on and start game\n  $(this).toggleClass(\"on\");\n  $('.controls-container').toggleClass(\"power-off\");\n  game.init();\n  /**\n   * need to toogle this when not player's turn here is only temporary\n   */\n});\n\n$('#strict').click(function() {\n  $('#light').toggleClass(\"on\");\n  game.strict = (game.strict === true)?false: true;\n  console.log(game);\n});\n\n$('.color-btn').click(function(e) {\n  let c = e.target.id;\n  playerMove(c);\n  game.locked = true;\n  $('.color-btn').toggleClass('clickable', true);\n  //game.erMessage(\"!!\");\n});\n","/**\n *  Trigger sound and color change when button computer or user\n *  triggers a color\n *  @param  string   color [Color button ID]\n */\nfunction flash(color){\n  let c = color;\n  let audio = document.getElementById(`audio-${c}`);\n  $('#'+c).toggleClass('light');\n  audio.play();\n  game.cTimer = setTimeout(function(){\n   // toggle back after 1 second\n   $('#'+c).toggleClass('light');\n  },500);\n};\n\nfunction displaySequence(){\n  var flTimer = function(c){\n      //console.log(game.sequence[i]);\n      setTimeout(function(){\n        flash(c);\n        console.log(game.sequence[i]);\n    },2000);\n  }\n  for(var i=0; i< game.level; i++){\n    let c= game.sequence[i];\n    flTimer(c);\n  }\n  clearTimeout(game.dTimer);\n  game.playerTurn(\"start\");\n}\n\n/**\n *  Update the current level display\n *  @return void\n */\nfunction updateLevelDisplay(){\n  let l = (\"00\" + game.level).slice(-2);\n  document.getElementById(\"score\").innerHTML = l;\n}\n\nfunction playerMove(color){\n  let c = color;\n  if(!game.locked){\n    flash(c);\n    if(c === game.sequence[game.level-1]){\n      game.score++;\n      game.level++;\n      game.playerTurn(\"end\");\n    } else{\n      this.active = false;\n      game.handleError();\n    }\n  }\n}","/**\n *  creting the game object\n *  @type {Object}\n */\nlet game = {};\n\ngame.init = function() {\n  this.level = 1;\n  this.turn = 0;\n  this.score = 0;\n  this.strict = false;\n  this.sequence = [];\n  this.active = false; // false until player presses start\n  this.locked = true;\n}\n\ngame.reset = function(){\n  this.init();\n  document.getElementById(\"score\").innerHTML = \"--\";\n}\n/**\n *  Generate the computer's planned sequence\n *  @return {[type]} [description]\n */\ngame.genSequence = function(){\n  let colors = [\"g\", \"r\", \"y\", \"b\"];\n  for(let i=0; i<20; i++){\n    this.sequence.push(colors[Math.floor(Math.random() * 4)]);\n  }\n}\n\ngame.playerTurn = function(a){\n  if(a === \"start\"){\n    this.locked = false;\n    $('.color-btn').toggleClass('clickable', true);\n  } else {\n    this.locked = true;\n    $('.color-btn').toggleClass('clickable', false);\n    if(this.active == true){\n      game.dTimer = setTimeout(displaySequence(), 2000);\n    }\n  }\n};\n\ngame.erMessage = function(msg){\n  //lock button clicks\n  this.locked = true;\n  $('.color-btn').toggleClass('clickable', true);\n\n  //update score text\n  $('#score').text(msg);\n\n  let sBox = function(){\n    $('.score-box').addClass('off');\n    game.erTimeout = setTimeout(function(){\n      $('.score-box').removeClass('off');\n    },250);\n  };\n  let count = 0;\n  sBox();\n  game.erInterval = setInterval(function(){\n    sBox();\n    count++;\n    if(count === 3)\n      clearInterval(game.erInterval);\n  },500)\n  clearTimeout(this.eTimer);\n};\n\ngame.handleError = function(){\n  game.erMessage(\"!!\");\n  if(this.strict === true){\n    game.reset();\n  }\n}\n\n\n",""]}